# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import time
import os
import datetime
from typing import Dict, List, Optional
import logging

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
import configs
import keyboards
import logs
import reports
import coupons
import supports
import database
import bot_settings


bot = bot_settings.create_bot()


@bot.message_handler(commands=["menu"])
def main_menu(message):
    user_id = message.from_user.id
    bot.send_message(
        message.chat.id,
        '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –¢—É—Ç –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —Ç—Ä–æ–Ω—ã –∏ –æ—Ç–∫—Ä—ã—Ç—å –±—É—Å—Ç–µ—Ä—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.',
        reply_markup=keyboards.main_menu_keyboards(user_id)
    )
    return


@bot.message_handler(commands=["start"])
def start_menu(message):
    user_id = message.from_user.id
    user_data = supports.converter_type_user_data(message=message)

    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    if not coupons.check_user_exists(user_id):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç - –Ω–∞—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã
        success = coupons.add_start_coins(user_id=user_id, amount=configs.start_gift_coin)
        if success:
            bot.send_message(
                message.chat.id,
                f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –∏–º–ø–µ—Ä—Å–∫–æ–π –ª–æ—Ç–µ—Ä–µ–∏! –ú—ã —Ç–µ–±–µ —Ä–∞–¥—ã. '
                f'–í –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥–∞—Ä–∫–∞ –º—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏ —Ç–µ–±–µ {configs.start_gift_coin} –º–æ–Ω–µ—Ç. '
                '–ù–∞–∂–º–∏ /menu –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.'
            )
        else:
            bot.send_message(
                message.chat.id,
                '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –º–æ–Ω–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å - –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –±–µ–∑ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
        bot.send_message(
            message.chat.id,
            '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –±–æ—Ç–∞ –∏–º–ø–µ—Ä—Å–∫–æ–π –ª–æ—Ç–µ—Ä–µ–∏! –ù–∞–∂–º–∏ /menu –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.'
        )

    # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    logging.info(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ –ë–î")
    database.insert_user_data_in_bd(user_id=user_id, user_data=user_data)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    user_id = call.from_user.id
    user_data = call.from_user

    if call.data == 'upload_cards':
        msg = bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–∞—Ä—Ç.")
        bot.register_next_step_handler(msg, reports.process_excel_file, bot)

    if call.data == 'promo_generate':
        msg = bot.send_message(call.message.chat.id, "üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ (–æ—Ç 1 –¥–æ 286):")
        bot.register_next_step_handler(msg, supports.process_promo_amount, bot)

    if call.data == 'open_coupons':

        if not coupons.coin_check(user_id, configs.price_pack_coupons):
            bot.send_message(call.message.chat.id, '–û—à–∏–±–∫–∞! –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ò–º–ø–µ—Ä—Å–∫–∏—Ö —Ç—Ä–æ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏!!')
            return

        coupons.open_buster(bot, call.message, user_id)

        qty_coin = coupons.qty_coin(user_id)
        bot.send_message(call.message.chat.id, f'–¢–í–æ–π –±–∞–ª–∞–Ω—Å: {qty_coin} –ò–º–ø–µ—Ä—Å–∫–∏—Ö —Ç—Ä–æ–Ω!\n',
                         reply_markup=keyboards.repeat_keyboards())
        return

    if call.data == 'promo':
        msg = bot.send_message(
            call.message.chat.id,
            "üîë –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ **XXXX-XXXX-XXXX**:",
            parse_mode="Markdown"
        )
        bot.register_next_step_handler(msg, supports.process_promo_code, bot)

    if call.data == 'info':
        supports.info_message(user_id, call.message, bot)
        return

    if call.data == 'my_coupons':
        supports.my_coupons(user_id, call.message, bot)

    if 'coupon_code' in call.data:
        coupon_text = call.data
        coupon_list = coupon_text.split()
        coupon_code = coupon_list[1]
        coupons.get_coupon_info(coupon_code, bot, call.message, user_id)

    if 'activate' in call.data:
        coupon_text = call.data
        coupon_list = coupon_text.split()
        coupon_code = coupon_list[1]
        coupons.activate_coupon(coupon_code, bot, call.message, user_id, user_data)

    if 'sell' in call.data:
        coupon_text = call.data
        coupon_list = coupon_text.split()
        coupon_code = coupon_list[1]
        coupons.sell_coupon(coupon_code, bot, call.message, user_id, user_data)

if __name__ == '__main__':
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        logs.setup_logging(log_level=configs.log_level)
        bot_settings.run_bot(bot)
        # bot.polling(none_stop=True)
    except Exception as e:
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: {e}")
        #supports.send_simple_message(bot, "üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ!")